% -*- mode: noweb; noweb-default-code-mode: R-mode; -*-
%\VignetteIndexEntry{Primer}
%\VignetteKeywords{Heatmap, Visualization}
%\VignetteDepends{}
%\VignettePackage{gsplom}
\documentclass[12pt]{article}
\usepackage{hyperref}
\usepackage[authoryear, round]{natbib}
\usepackage[utf8]{inputenc}
\usepackage{graphicx}

\textwidth=6.2in
\textheight=8.5in
\parskip=.3cm
\oddsidemargin=.1in
\evensidemargin=.1in
\headheight=-.3in

\newcommand\Rpackage[1]{{\textsf{#1}\index{#1 (package)}}}
\newcommand\dataset[1]{{\textit{#1}\index{#1 (data set)}}}
\newcommand\Rclass[1]{{\textit{#1}\index{#1 (class)}}}
\newcommand\Rfunction[1]{{{\small\texttt{#1}}\index{#1 (function)}}}
\newcommand\Rfunarg[1]{{\small\texttt{#1}}}
\newcommand\Robject[1]{{\small\texttt{#1}}}

\hypersetup{
    colorlinks=false,
    pdfborder={0 0 0},
}

\author{Andrew D. Yates}
\begin{document}
\title{Introduction to the gsplom Package}
\maketitle
\tableofcontents

<<setup, echo=FALSE>>=
## do work in temporary directory
pwd <- setwd(tempdir())
@ 

\section{Background}

This vignette describes how to normalize samples with the \textit{Single-Channel Array Normalization} (SCAN) and \textit{Universal exPression Codes} (UPC) methods. 

<<download-geo-direct, eval=FALSE>>=
library(GEOquery)
tmpDir = tempdir()
library(GEOquery)
getGEOSuppFiles("GSM555237", makeDirectory=FALSE, baseDir=tmpDir)
celFilePath = file.path(tmpDir, "GSM555237.CEL.gz")
@

To normalize the sample, we invoke the \Rfunction{SCAN} function. This function requires one mandatory parameter: a path specifying the location of the file to be normalized.

<<download-normalize, eval=FALSE>>=
library(SCAN.UPC)
normalized = SCAN(celFilePath)
@

For convenience, it is also possible to download microarray samples from GEO and normalize them in a single step. To do this, substitute the file path with a GEO identifier.

<<scan-geo, eval=FALSE>>=
normalized = SCAN("GSM555237")
@

The \Rfunction{SCAN} function returns an \Rclass{ExpressionSet} object containing a row for each probeset value. Detailed status information, including the number of iterations required for mathematical convergence of the mixture model, is printed to the console.

Multiple input files can be processed in one command via specifying wildcard characters (e.g., ``*.CEL'') or GEO experiment identifiers (e.g., ``GSE22309''). In this case, the \Rfunction{SCAN} function returns an \Rclass{ExpressionSet} object with a row for each probeset and a column for each input file.

Using the optional \Rfunarg{outFilePath} parameter, the normalized values can be saved to a text file. The example below demonstrates this option.

<<download-normalize2, eval=FALSE>>=
normalized = SCAN(celFilePath, outFilePath="output_file.txt")
@

By default, \Rfunction{SCAN} maps Affymetrix probes to ``probeset'' identifiers provided by the manufacturer. However, these mappings may be outdated and include problematic probes (for example, those that may cross hybridize). In addition, multiple probesets may be assigned to a single gene. As an alternative, the BrainArray resource (see \url{http://brainarray.mbni.med.umich.edu/Brainarray/Database/CustomCDF/genomic_curated_CDF.asp}) provides regularly updated mappings that exclude problematic probes and map to genes rather than probesets. When invoking \Rfunction{SCAN}, users can specify such alternative mappings via the \Rfunarg{probeSummaryPackage} parameter. (Packages other than those provided by BrainArray can be used if they conform to the standards of the \Rpackage{AnnotationDbi} package.)

BrainArray packages can be downloaded manually from \url{http://brainarray.mbni.med.umich.edu/Brainarray/Database/CustomCDF/CDF_download.asp}. When downloading, be sure to download the R source package for probe-level mappings (example below).

\includegraphics[width=6 in]{BrainArray.png}

After such a package has been downloaded, it can be installed using code such as the following.

<<download-brainarray, eval=FALSE>>=
install.packages("hgu95ahsentrezgprobe_15.0.0.tar.gz", repos=NULL, type="source")
@

Or instead of downloading BrainArray packages manually, it is now possible to download these packages via the \Rfunction{InstallBrainArrayPackage} function.

<<install-brainarray, eval=FALSE>>=
pkgName = InstallBrainArrayPackage(celFilePath, "15.0.0", "hs", "entrezg")
@

These mappings can be applied during normalization using code such as the following.

<<scan-brainarray, eval=FALSE>>=
normalized = SCAN(celFilePath, probeSummaryPackage=pkgName)
@

\section{How to produce SCAN estimates for Agilent two-color microarrays}

The \Rpackage{SCAN.UPC} package also supports the ability to normalize Agilent two-color microarrays. The general concept is similar to Affymetrix arrays; however, SCAN also corrects for biases that can arise due to the dyes used in each channel, as well as inter-channel correlation. (This package does not yet support normalizing Agilent one-color arrays.)

\section{Conclusion}

Please see the \Rpackage{SCAN.UPC} documentation for full descriptions of functions and the various options they support.

%\bibliographystyle{plainnat}
%\bibliography{SCAN.vignette}

\end{document}
